[package]
name = "bebop"
version = "0.1.0"
edition = "2021"
description = "The Rust runtime for Bebop, a schema-based binary serialization format."
readme = "../../README.md"
license = "Apache-2.0"
keywords = ["binary", "encode", "decode", "serialization", "schema"]
categories = ["encoding"]
repository = "https://github.com/RainwayApp/bebop"
homepage = "https://github.com/RainwayApp/bebop/wiki"

[[bench]]
name = "main"
harness = false

[dependencies]
bitflags = "1.3"
itertools = { version = "0.10", optional = true }
async-trait = { version = "0.1", optional = true }
tokio = { version = "1.16", optional = true, default-features = false }
parking_lot = { version = "0.12", optional = true }

[dev-dependencies]
criterion = "0.3"

[dev-dependencies.tokio]
version = "*"
optional = false
features = ["rt", "macros"]

[build-dependencies]
bebop-tools = { path = "../../Tools/cargo", default-features = false, features = ["format"] }

[features]
default = ["rpc"]
# where reasonable, skip decoding checks, this will cause random issues if invalid UTF8 is sent to
# the program
unchecked = []
# Enable to have maps sorted by their key values
sorted_maps = ["itertools"]
# Enable support for Bebop RPC services
rpc = ["async-trait", "tokio/sync", "parking_lot/arc_lock", "tokio/time", "rpc-datagram", "rpc-datagram-owned"]
rpc-datagram = []
rpc-datagram-owned = []
