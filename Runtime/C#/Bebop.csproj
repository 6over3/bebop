<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net472;netstandard2.0;netstandard2.1;netcoreapp3.1;net5.0;net6.0</TargetFrameworks>
    <Nullable>enable</Nullable>
    <LangVersion>10.0</LangVersion>
    <Description>The .NET runtime for Bebop, a schema-based binary serialization format.</Description>
    <PackageId>bebop</PackageId>
    <Authors>The Bebop Authors</Authors>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Version Condition="'$(ReleaseVersion)' != ''">$(ReleaseVersion)</Version>
    <VersionPrefix Condition="'$(ReleaseVersion)' == ''">0.0.1</VersionPrefix>
    <VersionSuffix Condition="'$(ReleaseVersion)' == ''">$([System.DateTime]::UtcNow.ToString(`yyyyMMdd-HHmm`))</VersionSuffix>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/RainwayApp/bebop</PackageProjectUrl>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <DocumentationFile>./bin/$(AssemblyName).xml</DocumentationFile>
    <IncludeContentInPack>true</IncludeContentInPack>
    <Company></Company>
    <PackageIcon>128.png</PackageIcon>
    <RepositoryUrl>https://github.com/RainwayApp/bebop.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>binary serialization bebop encoding decoding</PackageTags>
  </PropertyGroup>

  <ItemGroup Condition="$(TargetFramework.StartsWith('net4')) Or $(TargetFramework.StartsWith('netcoreapp')) Or $(TargetFramework.StartsWith('netstandard'))">
    <!--
    IsExternalInit will not be added to legacy .NET Framework and as such this dependency needs to flow 
    to projects that reference our package so generated code works.
    -->
    <PackageReference Include="IsExternalInit" Version="1.0.0">
      <PrivateAssets>none</PrivateAssets>
      <ExcludeAssets>none</ExcludeAssets>
      <IncludeAssets>all</IncludeAssets>
    </PackageReference>

  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework.StartsWith('net4')) Or $(TargetFramework.StartsWith('netstandard'))">
    <PackageReference Include="System.Collections.Immutable" Version="5.0.0" />
     <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="5.0.0" />
  </ItemGroup>


  <ItemGroup Condition="$(TargetFramework.StartsWith('net4')) Or '$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="System.Memory" Version="4.5.4" />
    <PackageReference Include="System.Buffers" Version="4.5.1" />
    <PackageReference Include="System.Threading.Tasks.Extensions" Version="4.5.4" />
    <!--
    Nullable will not be added to legacy .NET Framework and as such this dependency needs to flow 
    to projects that reference our package so generated code works.
    -->
    <PackageReference Include="Nullable" Version="1.3.0">
      <PrivateAssets>none</PrivateAssets>
      <ExcludeAssets>none</ExcludeAssets>
      <IncludeAssets>all</IncludeAssets>
    </PackageReference>
  </ItemGroup>


  <ItemGroup>
    <PackageReference Include="ErrorProne.NET.CoreAnalyzers" Version="0.3.0-beta.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="ErrorProne.NET.Structs" Version="0.3.0-beta.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>


  <ItemGroup>
    <None Include="..\..\assets\128.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net5.0' Or '$(TargetFramework)' == 'netcoreapp3.1' Or '$(TargetFramework)' == 'net6.0'">
    <DefineConstants>TRACE;AGGRESSIVE_OPTIMIZE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <Optimize>false</Optimize>
  </PropertyGroup>

</Project>