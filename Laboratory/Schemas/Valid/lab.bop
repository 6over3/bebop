mut struct Int32s { int32[] a; }
mut struct Uint32s { uint32[] a; }
mut struct Float32s { float32[] a; }
mut struct Int64s { int64[] a; }
mut struct Uint64s { uint64[] a; }
mut struct Float64s { float64[] a; }

enum VideoCodec { H264=0; H265=1; }
mut struct VideoData { float64 time; uint32 width; uint32 height; byte[] fragment; }
message MediaMessage { 1 -> VideoCodec codec; 2 -> VideoData data; }

// Should be able to decode a "SkipTestNewContainer" as a "SkipTestOldContainer".
message SkipTestOld { 1->int32 x; 2->int32 y; }
message SkipTestNew { 1->int32 x; 2->int32 y; 3->int32 z; }
message SkipTestOldContainer { 1->SkipTestOld s; 2->int32 after; }
message SkipTestNewContainer { 1->SkipTestNew s; 2->int32 after; }
